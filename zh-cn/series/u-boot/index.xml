<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>U-Boot on kingdix10&#39;s site</title>
    <link>https://kingdix10.github.io/zh-cn/series/u-boot/</link>
    <description>Recent content in U-Boot on kingdix10&#39;s site</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>Copyright ? 2018-2024 kingdix10. All Rights Reserved.
</copyright>
    <lastBuildDate>Tue, 11 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kingdix10.github.io/zh-cn/series/u-boot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>U-Boot从dtb获取内存布局并传递到内核</title>
      <link>https://kingdix10.github.io/zh-cn/docs/03-boot/u-boot/uboot_mem/</link>
      <pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://kingdix10.github.io/zh-cn/docs/03-boot/u-boot/uboot_mem/</guid>
      <description><![CDATA[<h1 id="1-u-boot获取布局内存" data-numberify>1. U-Boot获取布局内存<a class="anchor ms-1" href="#1-u-boot获取布局内存"></a></h1>
<p>U-Boot在启动过程中，默认内存布局通常在<code>.config</code>中定义。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="ln">1</span><span class="cl"><span class="n">CONFIG_SYS_SDRAM_BASE</span><span class="o">=</span><span class="mh">0x240000000</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="n">CONFIG_SYS_DDR_SIZE</span><span class="o">=</span><span class="mh">0xC0000000</span>
</span></span></code></pre></div><p>在DDR控制器初始化完成之后，就要确定系统中有多少可用内存，这通常是由<code>dram_init_banksize</code>来实现的，而不同的板级文件会实现不同的<code>dram_init_banksize</code>，这也就决定了不同的板级可以定义不同的获取内存布局的方法。这里介绍一种从dtb中获取内存布局的实现，这可以通过简单的调用<code>fdtdec_setup_memory_banksize</code>来实现。而在使能了<code>CONFIG_OF_LIBFDT</code>的情况下，U-Boot又会通过<code>fdt_fixup_memory_banks</code>来为内核dtb添加或修改<code>memory</code>节点，这样就可以只在U-Boot中定义<code>memory</code>信息，内核dtb省略<code>memory</code>定义，从而可以使其更加简洁通用。相信这也是后续U-Boot推荐使用的方式。</p>]]></description>
    <enclosure url="https://kingdix10.github.io/covers/drone_camera_technology_171576_300x168.jpg" length="10102" type="image/.jpg" />
    </item>
    
    <item>
      <title>U-Boot杂项记录</title>
      <link>https://kingdix10.github.io/zh-cn/docs/03-boot/u-boot/uboot_misc_note/</link>
      <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://kingdix10.github.io/zh-cn/docs/03-boot/u-boot/uboot_misc_note/</guid>
      <description><![CDATA[<h1 id="1-get_ram_size" data-numberify>1. get_ram_size<a class="anchor ms-1" href="#1-get_ram_size"></a></h1>
<p><code>get_ram_size</code>只适用于<code>CONFIG_SYS_DDR_SIZE=2^n</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="ln">1</span><span class="cl"><span class="kt">int</span> <span class="nf">dram_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl">    <span class="n">gd</span><span class="o">-&gt;</span><span class="n">ram_size</span> <span class="o">=</span> <span class="nf">get_ram_size</span><span class="p">((</span><span class="kt">long</span> <span class="o">*</span><span class="p">)</span><span class="n">CONFIG_SYS_SDRAM_BASE</span><span class="p">,</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl">                    <span class="n">CONFIG_SYS_DDR_SIZE</span><span class="p">);</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="ln">6</span><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>
<h1 id="2-多核启动之spintable" data-numberify>2. 多核启动之spintable<a class="anchor ms-1" href="#2-多核启动之spintable"></a></h1>
<p>U-Boo中需要开启<code>ARMV8_MULTIENTRY</code>，另外<code>CPU_RELEASE_ADDR</code>的值要与内核dtb的<code>cpu-release-addr</code>保持一致。</p>]]></description>
    <enclosure url="https://kingdix10.github.io/covers/bubbles_drops_macro_126764_300x168.jpg" length="23506" type="image/.jpg" />
    </item>
    
    <item>
      <title>U-Boot启动分析</title>
      <link>https://kingdix10.github.io/zh-cn/docs/03-boot/u-boot/u-boot-bootflow/</link>
      <pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://kingdix10.github.io/zh-cn/docs/03-boot/u-boot/u-boot-bootflow/</guid>
      <description><![CDATA[<h1 id="1-查找入口" data-numberify>1. 查找入口<a class="anchor ms-1" href="#1-查找入口"></a></h1>
<p>u-boot版本：2024.01
参考defconfig：imx8qm_mek_defconfig</p>
<p>通过编译生成的<code>u-boot.lds</code>，<code>U-Boot</code>的入口为<code>_start</code>。而程序的一开始存放的指令是由<code>start.c</code>生成的。</p>]]></description>
    <enclosure url="https://kingdix10.github.io/covers/wall_brick_neon_150470_300x168.jpg" length="13857" type="image/.jpg" />
    </item>
    
    <item>
      <title>u-boot的stubs机制</title>
      <link>https://kingdix10.github.io/zh-cn/docs/03-boot/u-boot/u-boot-stubs/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://kingdix10.github.io/zh-cn/docs/03-boot/u-boot/u-boot-stubs/</guid>
      <description><![CDATA[<h1 id="1-u-boot版本" data-numberify>1. U-Boot版本<a class="anchor ms-1" href="#1-u-boot版本"></a></h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-makefile" data-lang="makefile"><span class="line"><span class="ln">1</span><span class="cl"><span class="nv">VERSION</span> <span class="o">=</span> <span class="m">2021</span>
</span></span><span class="line"><span class="ln">2</span><span class="cl"><span class="nv">PATCHLEVEL</span> <span class="o">=</span> <span class="m">10</span>
</span></span><span class="line"><span class="ln">3</span><span class="cl"><span class="nv">SUBLEVEL</span> <span class="o">=</span>
</span></span><span class="line"><span class="ln">4</span><span class="cl"><span class="nv">EXTRAVERSION</span> <span class="o">=</span>
</span></span><span class="line"><span class="ln">5</span><span class="cl"><span class="nv">NAME</span> <span class="o">=</span>
</span></span></code></pre></div>
<h1 id="2-涉及的文件" data-numberify>2. 涉及的文件<a class="anchor ms-1" href="#2-涉及的文件"></a></h1>
<ol>
<li><code>include/_exports.h</code>，辅助文件，在包含<code>_exports.h</code>前，定义不同的<code>EXPORT_FUNC</code>来实现不同的功能，其内容为一系列<code>EXPORT_FUNC</code>修饰的函数。</li>
<li><code>include/exports.h</code>，函数声明。</li>
<li><code>examples/standalone/stubs.c</code>，用于建立<code>jumptable</code>，将U-Boot的函数指针存入<code>jumptable</code>中。</li>
<li><code>common/exports.c</code>，初始化<code>jumptable</code>。</li>
<li><code>examples/standalone/hello_world.c</code>，独立于U-Boot的程序代码，编译目标文件为单独的bin，可以调用U-Boot的函数。</li>
</ol>
<p>类似的还有<code>kernel</code>的<code>include/uapi/asm-generic/unistd.h</code>文件（以v5.15为例）。</p>]]></description>
    <enclosure url="https://kingdix10.github.io/covers/cameras_photography_accessories_197110_300x168.jpg" length="15246" type="image/.jpg" />
    </item>
    
  </channel>
</rss>

